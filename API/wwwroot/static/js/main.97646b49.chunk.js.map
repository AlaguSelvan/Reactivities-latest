{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/models/activity.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/Navbar.tsx","features/activities/dashboard/ActivityFilters.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","app/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/LoadingComponent.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/options/categoryOptions.ts","app/common/form/MyDateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","app/errors/TestError.tsx","app/errors/NotFound.tsx","app/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileFollowings.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","toast","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","id","create","activity","update","attend","Account","current","login","user","register","Profiles","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateProfile","profile","updateFollowing","listFollowings","predicate","listActivities","ActivityFormValues","undefined","title","category","description","date","city","venue","Activity","init","Object","assign","Profile","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","loadActivities","axiosParams","results","setActivity","setPagination","setLoadingInitial","console","state","createActivity","userStore","attendee","newActivity","hostUsername","attendees","runInAction","updateActivity","updatedActivity","getActivity","loadActivity","isGoing","some","isHost","host","find","x","Date","deleteActivity","updateAttendance","filter","log","cancelActivityToggle","isCancelled","clearSelectedActivity","updateAttendeeFollowing","following","followersCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","ProfileStore","loadingProfile","uploading","followings","loadingFollowings","userActivities","loadingActivities","activeTab","setActiveTab","loadProfile","photo","photos","isMain","setImage","p","setDisplayName","activityStore","followingCount","loadFollowings","loadUserActivities","UserStore","creds","setToken","modalStore","closeModal","logout","window","localStorage","removeItem","getUser","name","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","catch","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","to","exact","header","src","alt","style","marginRight","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","vertical","size","width","marginTop","Header","attached","color","active","has","onChange","Reveal","animated","Content","visible","fluid","hidden","basic","e","preventDefault","handleFollow","Card","Description","str","length","substring","truncate","bio","extra","Icon","styles","borderColor","borderWidth","List","horizontal","map","index","Popup","hoverable","trigger","circular","bordered","ActivityListItem","Segment","Group","Label","textAlign","marginBottom","secondary","clearing","floated","groupedActivities","group","sub","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","MyTextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","ValidationErrors","Message","err","i","userName","validationSchema","Yup","required","isValid","dirty","isLoggedIn","RegisterForm","LoadingComponent","Dimmer","MySelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOptions","MyDateInput","selected","useHistory","useParams","enableReinitialize","uuid","handleFormSubmit","MyTextArea","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","negative","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","verticalAlign","relaxed","divided","idx","Extra","TestErrors","baseUrl","widths","primary","NotFound","Inline","ServerError","message","Modal","onClose","setEditMode","isCurrentUser","Tab","Pane","panes","menuItem","pane","menu","onTabChange","activeIndex","handleTabChange","itemsPerRow","objectFit","Meta","itemsPerRouw","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","ProfileContent","menuPosition","small","Statistic","Divider","PrivateRoute","Component","component","rest","location","useLocation","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.97646b49.chunk.js","sourcesContent":["export interface Pagination {\r\n  currentPage: number;\r\n  itemsPerPage: number;\r\n  totalItems: number;\r\n  totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n  data: T;\r\n  pagination: Pagination;\r\n  \r\n  constructor(data: T, pagination: Pagination) {\r\n    this.data = data;\r\n    this.pagination = pagination;\r\n  }\r\n\r\n}\r\n\r\nexport class PagingParams {\r\n  pageNumber;\r\n  pageSize;\r\n  constructor(pageNumber = 1, pageSize = 2) {\r\n    this.pageNumber = pageNumber;\r\n    this.pageSize = pageSize;\r\n  }\r\n}","import axios, { AxiosError, AxiosResponse } from 'axios';\r\nimport { Activity, ActivityFormValues } from '../models/activity';\r\nimport {toast} from 'react-toastify'\r\nimport { history } from '../..';\r\nimport { store } from '../stores/store';\r\nimport { User, UserFormValues } from '../models/user';\r\nimport { Photo, Profile, UserActivity } from '../models/profile';\r\nimport { PaginatedResult } from '../models/pagination';\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\nconst sleep = (delay: number) => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay)\r\n  })\r\n}\r\n\r\naxios.interceptors.request.use(config => {\r\n  const token = store.commonStore.token;\r\n  if (token) config.headers.Authorization = `Bearer ${token}`\r\n  return config\r\n})\r\n\r\naxios.interceptors.response.use(async response => {\r\n  if(process.env.NODE_ENV === \"development\") await sleep(1000);\r\n  const pagination = response.headers['pagination'];\r\n  if(pagination) {\r\n    response.data = new PaginatedResult(response.data, JSON.parse(pagination));\r\n    return response as AxiosResponse<PaginatedResult<any>>\r\n  }\r\n    return response\r\n}, (error: AxiosError) => {\r\n  const {data, status, config} = error.response!;\r\n  switch (status) {\r\n    case 400:\r\n      if(typeof data === 'string') {\r\n        toast.error(data);\r\n      }\r\n      if (config.method === 'get' && data.errors.hasOwnProperty('id')) {\r\n        history.push('/not-found');\r\n      }\r\n      if(data.errors) {\r\n        const modalStateErrors = [];\r\n        for (const key in data.errors) {\r\n          if(data.errors[key]) {\r\n            modalStateErrors.push(data.errors[key]);\r\n          }\r\n        }\r\n        throw modalStateErrors.flat();\r\n      } else {\r\n        toast.error(data);\r\n      }\r\n      break;\r\n    case 401:\r\n      toast.error('unauthorised')\r\n      break;\r\n    case 404:\r\n      history.push('/not-found');\r\n      break;\r\n    case 500:\r\n      store.commonStore.setServerError(data);\r\n      history.push('/server-error');\r\n      break;\r\n  }\r\n  return Promise.reject(error);\r\n})\r\n\r\nconst responseBody = <T> (response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n  post: <T>(url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\r\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n  del: <T>(url: string) => axios.delete<T>(url).then(responseBody)\r\n}\r\n\r\nconst Activities = {\r\n  list: (params: URLSearchParams) => axios.get<PaginatedResult<Activity[]>>('/activities', {params}).then(responseBody),\r\n  details: (id: string) => requests.get<Activity>(`/activities/${id}`),\r\n  create: (activity: ActivityFormValues) => requests.post<void>(`/activities`, activity),\r\n  update: (activity: ActivityFormValues) => requests.put<void>(`/activities/${activity.id}`, activity),\r\n  delete: (id: string) => requests.del<void>(`/activities/${id}`),\r\n  attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {})\r\n}\r\n\r\nconst Account = {\r\n  current: () => requests.get<User>('/account'),\r\n  login: (user: UserFormValues) => requests.post<User>('/account/login', user),\r\n  register: (user: UserFormValues) => requests.post<User>('/account/register', user)\r\n}\r\n\r\nconst Profiles = {\r\n  get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\r\n  uploadPhoto: (file: Blob) => {\r\n    let formData = new FormData()\r\n    formData.append('File', file);\r\n    return axios.post<Photo>('photos', formData, {\r\n      headers: {'Content-type': 'multipart/form-data'}\r\n    })\r\n  },\r\n  setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\r\n  deletePhoto: (id: string) => requests.del(`/photos/${id}`),\r\n  updateProfile: (profile: Partial<Profile>) => requests.put(`/profiles`, profile),\r\n  updateFollowing: (username: string) => requests.post(`/follow/${username}`, {}),\r\n  listFollowings: (username: string, predicate: string) => requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\r\n  listActivities: (username: string, predicate: string) => requests.get<UserActivity[]>(`/profiles/${username}/activities?predicate=${predicate}`)\r\n}\r\n\r\nconst agent = {\r\n  Activities,\r\n  Account,\r\n  Profiles\r\n}\r\n\r\nexport default agent;","import { Profile } from \"./profile\";\r\n\r\nexport interface Activity {\r\n  id: string;\r\n  title: string;\r\n  date: Date | null;\r\n  description: string;\r\n  category: string;\r\n  city: string;\r\n  venue: string;\r\n  hostUsername?: string;\r\n  isCancelled?: boolean;\r\n  isGoing?: boolean;\r\n  isHost?: boolean;\r\n  host?: Profile;\r\n  attendees?: Profile[];\r\n}\r\n\r\nexport class ActivityFormValues {\r\n  id?: string = undefined;\r\n  title: string = '';\r\n  category: string = '';\r\n  description: string = '';\r\n  date: Date | null = null;\r\n  city: string = '';\r\n  venue: string = '';\r\n\r\n  constructor(activity?: ActivityFormValues) {\r\n    if(activity) {\r\n      this.id = activity.id;\r\n      this.title = activity.title;\r\n      this.category = activity.category;\r\n      this.description = activity.description;\r\n      this.date = activity.date;\r\n      this.venue = activity.venue;\r\n      this.city = activity.city;\r\n    }\r\n  }\r\n}\r\n\r\nexport class Activity implements Activity {\r\n  constructor(init?: ActivityFormValues) {\r\n    Object.assign(this, init);\r\n  }\r\n}","import { User } from \"./user\";\r\n\r\nexport interface Profile {\r\n  username: string;\r\n  displayName: string;\r\n  image?: string ;\r\n  bio?: string;\r\n  followersCount: number;\r\n  followingCount: number;\r\n  following: boolean;\r\n  photos: Photo[];\r\n}\r\n\r\nexport interface UserActivity {\r\n  id: string;\r\n  title: string;\r\n  category: string;\r\n  date: string;\r\n}\r\n\r\nexport class Profile implements Profile {\r\n  constructor(user: User) {\r\n    this.username = user.username;\r\n    this.displayName = user.displayName;\r\n    this.image = user.image;\r\n  }\r\n}\r\n\r\nexport interface Photo {\r\n  id: string;\r\n  url: string;\r\n  isMain: boolean;\r\n}","import { format } from \"date-fns\";\r\nimport { makeAutoObservable, reaction, runInAction } from \"mobx\"\r\nimport agent from \"../api/agent\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport { Pagination, PagingParams } from \"../models/pagination\";\r\nimport { Profile } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ActivityStore {\r\n  activityRegistry = new Map<string, Activity>();\r\n  selectedActivity: Activity | undefined = undefined;\r\n  editMode = false;\r\n  loading = false;\r\n  loadingInitial = false;\r\n  pagination: Pagination | null = null;\r\n  pagingParams = new PagingParams();\r\n  predicate = new Map().set(\"all\", true);\r\n  \r\n  constructor() {\r\n    makeAutoObservable(this)\r\n    reaction(\r\n      () => this.predicate.keys(),\r\n      () => {\r\n        this.pagingParams = new PagingParams();\r\n        this.activityRegistry.clear();\r\n        this.loadActivities();\r\n      }\r\n    )\r\n  }\r\n\r\n  setPagingParams = (pagingParams: PagingParams) => this.pagingParams = pagingParams;\r\n  \r\n  setPredicate = (predicate: string, value: string | Date) => {\r\n    const resetPredicate = () => {\r\n      this.predicate.forEach((value, key) => {\r\n        if(key !== \"startDate\") this.predicate.delete(key);\r\n      })\r\n    }\r\n    switch(predicate) {\r\n      case 'all':\r\n        resetPredicate()\r\n        this.predicate.set(\"all\", true);\r\n        break;\r\n      case 'isGoing':\r\n        resetPredicate();\r\n        this.predicate.set(\"isGoing\", true);\r\n        break;\r\n      case 'isHost':\r\n        resetPredicate();\r\n        this.predicate.set(\"isHost\", true);\r\n        break;\r\n      case 'startDate':\r\n        this.predicate.delete(\"startDate\");\r\n        this.predicate.set(\"startDate\", value);\r\n        break;\r\n    }\r\n  }\r\n\r\n  get axiosParams() {\r\n    const params = new URLSearchParams();\r\n    params.append(\"pageNumber\", this.pagingParams.pageNumber.toString());\r\n    params.append(\"pageSize\", this.pagingParams.pageSize.toString());\r\n    this.predicate.forEach((value, key) => {\r\n      if (key === \"startDate\") {\r\n        params.append(key, (value as Date).toISOString())\r\n      } else {\r\n        params.append(key, value);\r\n      }\r\n    })\r\n    return params;\r\n  }\r\n\r\n  get activitiesByDate() {\r\n    return Array.from(this.activityRegistry.values()).sort((a, b) => (a.date!.getTime()) - (b.date!.getTime()))\r\n  }\r\n\r\n  loadActivities = async () => {\r\n    this.loadingInitial = true;\r\n    try {\r\n      const results = await agent.Activities.list(this.axiosParams);\r\n      results.data.forEach(activity => {\r\n        this.setActivity(activity);\r\n      })\r\n      this.setPagination(results.pagination);\r\n      this.setLoadingInitial(false);\r\n    } catch (error) {\r\n      console.error(error)\r\n      this.setLoadingInitial(false);\r\n    }\r\n  }\r\n\r\n  setPagination = (pagination: Pagination) => this.pagination = pagination;\r\n\r\n  setLoadingInitial = (state: boolean) => {\r\n    this.loadingInitial = state;\r\n  }\r\n\r\n  createActivity = async (activity: ActivityFormValues) => {\r\n    const user = store.userStore.user;\r\n    const attendee = new Profile(user!);\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.create(activity);\r\n      const newActivity = new Activity(activity);\r\n      newActivity.hostUsername = user!.username;\r\n      newActivity.attendees = [attendee];\r\n      this.setActivity(newActivity);\r\n      runInAction(() => {\r\n        this.selectedActivity = newActivity;\r\n      })\r\n    } catch (error) {\r\n      runInAction(() => {\r\n        this.loading = false\r\n      })\r\n    }\r\n  }\r\n\r\n  get groupedActivities() {\r\n    return Object.entries(\r\n      this.activitiesByDate.reduce((activities, activity) => {\r\n        console.log(activities, 'activity')\r\n        const date = format(activity.date!, 'dd MM yyyy')\r\n        activities[date] = activities[date] ? [...activities[date], activity] : [activity]\r\n        return activities;\r\n      }, {} as {[key: string]: Activity[]})\r\n    )\r\n  }\r\n\r\n  updateActivity = async(activity: ActivityFormValues) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.update(activity);\r\n      runInAction(() => {\r\n        if(activity.id) {\r\n          let updatedActivity = {...this.getActivity(activity.id), ...activity}\r\n          this.activityRegistry.set(activity.id, updatedActivity as Activity);\r\n          this.selectedActivity = updatedActivity as Activity;\r\n        }\r\n      })\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  loadActivity = async (id: string) => {\r\n    let activity = this.getActivity(id);\r\n    if(activity) {\r\n      this.selectedActivity = activity\r\n      return activity;\r\n    } else {\r\n      this.loadingInitial = true;\r\n      try {\r\n        activity = await agent.Activities.details(id)\r\n        this.setActivity(activity);\r\n        runInAction(() => {\r\n          this.selectedActivity = activity;\r\n        })\r\n        this.setLoadingInitial(false)\r\n        return activity;\r\n      } catch (error) {\r\n        this.setLoadingInitial(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  private setActivity = (activity: Activity) => {\r\n    const user = store.userStore.user;\r\n    if (user) {\r\n      activity.isGoing = activity.attendees!.some(\r\n        a => a.username === user.username\r\n      )\r\n      activity.isHost = activity.hostUsername === user.username\r\n      activity.host = activity.attendees?.find(x => x.username === activity.hostUsername)!\r\n    }\r\n    activity.date = new Date(activity.date!);\r\n    this.activityRegistry.set(activity.id, activity);\r\n  }\r\n\r\n  private getActivity = (id: string) => {\r\n    return this.activityRegistry.get(id);\r\n  }\r\n\r\n    deleteActivity = async(id: string) => {\r\n    this.loading = true\r\n    try {\r\n      await agent.Activities.delete(id)\r\n      runInAction(() => {\r\n        this.activityRegistry.delete(id);\r\n        this.loading = false;\r\n      })\r\n    } catch (error) {\r\n      console.error(error)\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      })\r\n    }\r\n  }\r\n\r\n  updateAttendance = async () => {\r\n    const user = store.userStore.user;\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.attend(this.selectedActivity!.id);\r\n      runInAction(() => {\r\n        if(this.selectedActivity?.isGoing) {\r\n          this.selectedActivity.attendees = this.selectedActivity.attendees?.filter(a => a.username !== user?.username)!\r\n          this.selectedActivity.isGoing = false;\r\n        } else {\r\n          const attendee = new Profile(user!);\r\n          this.selectedActivity?.attendees?.push(attendee);\r\n          this.selectedActivity!.isGoing = true;\r\n        }\r\n        this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!); \r\n      })\r\n    } catch (error) {\r\n      console.log(error)\r\n    } finally {\r\n      runInAction(() => this.loading = false)\r\n    }\r\n  }\r\n\r\n  cancelActivityToggle = async() => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.attend(this.selectedActivity!.id)\r\n      runInAction(() => {\r\n        this.selectedActivity!.isCancelled = !this.selectedActivity?.isCancelled\r\n        this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\r\n      })\r\n    } catch (error) {\r\n      console.log(error)\r\n    } finally {\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      })\r\n    }\r\n  }\r\n\r\n  clearSelectedActivity = () => {\r\n    this.selectedActivity = undefined;\r\n  }\r\n\r\n  updateAttendeeFollowing = (username: string) => {\r\n    this.activityRegistry.forEach(activity => {\r\n      activity.attendees?.forEach(attendee => {\r\n        if(attendee.username === username) {\r\n          attendee.following ? attendee.followersCount-- : attendee.followersCount++;\r\n          attendee.following = !attendee.following;\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n}","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ProfileStore {\r\n  profile: Profile | null = null;\r\n  loadingProfile = false;\r\n  uploading = false;\r\n  loading = false;\r\n  followings: Profile[] = [];\r\n  loadingFollowings = false;\r\n  userActivities: UserActivity[] = [];\r\n  loadingActivities = false;\r\n  activeTab = 0;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n    reaction(() => this.activeTab, activeTab => {\r\n      if (activeTab === 3 || activeTab === 4) {\r\n        const predicate = activeTab === 3 ? 'followers' : 'following'\r\n        this.loadFollowings(predicate)\r\n      } else {\r\n        this.followings = [];\r\n      }\r\n    })\r\n  }\r\n\r\n  setActiveTab = (activeTab: any) => {\r\n    this.activeTab = activeTab;\r\n  }\r\n\r\n  get isCurrentUser(): Boolean {\r\n    if(store.userStore.user && this.profile) {\r\n      return store.userStore.user.username === this.profile.username;\r\n    }\r\n    return false\r\n  }\r\n\r\n  loadProfile = async (username: string) => {\r\n    this.loadingProfile = true;\r\n    try {\r\n      const profile = await agent.Profiles.get(username)\r\n      runInAction(() => {\r\n        this.profile = profile;\r\n        this.loadingProfile = false;\r\n      })\r\n    } catch (error) {\r\n      runInAction(() => this.loadingProfile = false)\r\n    }\r\n  }\r\n\r\n  uploadPhoto = async (file: Blob) => {\r\n    this.uploading = true;\r\n    try {\r\n      const response = await agent.Profiles.uploadPhoto(file)\r\n      const photo = response.data;\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos.push(photo);\r\n          if(photo.isMain && store.userStore.user) {\r\n            store.userStore.setImage(photo.url)\r\n            this.profile.image = photo.url;\r\n          }\r\n        }\r\n        this.uploading = false;\r\n      })\r\n    } catch (error) {\r\n       runInAction(() => {\r\n         this.uploading = false\r\n       })\r\n    }\r\n  }\r\n\r\n  setMainPhoto = async (photo: Photo) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.setMainPhoto(photo.id);\r\n      store.userStore.setImage(photo.url);\r\n      runInAction(() => {\r\n        if(this.profile && this.profile.photos) {\r\n          this.profile.photos.find(p => p.isMain)!.isMain = false;\r\n          this.profile.photos.find(p => p.id === photo.id)!.isMain = true;\r\n          this.profile.image = photo.url;\r\n          this.loading = false;\r\n        }\r\n      })\r\n    } catch (error) {\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      })\r\n    }\r\n  }\r\n\r\n  deletePhoto = async (photo: Photo) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.deletePhoto(photo.id);\r\n      runInAction(() => {\r\n        if(this.profile) {\r\n          this.profile.photos = this.profile.photos.filter(p => p.id !== photo.id)\r\n          this.loading = false;\r\n        }\r\n      })\r\n    } catch (error) {\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      })\r\n    }\r\n  }\r\n\r\n    updateProfile = async (profile: Partial<Profile>) => {\r\n      this.loading = true;\r\n      try {\r\n        await agent.Profiles.updateProfile(profile);\r\n        runInAction(() => {\r\n          if (profile.displayName && profile.displayName !== store.userStore.user?.displayName) {\r\n            store.userStore.setDisplayName(profile.displayName);\r\n          }\r\n          this.profile = {...this.profile, ...profile as Profile};\r\n          this.loading = false;\r\n        })\r\n      } catch (error) {\r\n        runInAction(() => this.loading = false);\r\n      }\r\n    }\r\n\r\n    updateFollowing = async (username: string, following: boolean) => {\r\n      this.loading = true;\r\n      try {\r\n        await agent.Profiles.updateFollowing(username);\r\n        store.activityStore.updateAttendeeFollowing(username);\r\n        runInAction(() => {\r\n          if (this.profile && this.profile.username !== store.userStore.user?.username && this.profile.username === username) {\r\n              following ? this.profile.followersCount++ : this.profile.followersCount--;\r\n              this.profile.following = !this.profile.following;\r\n          }\r\n          if(this.profile && this.profile.username === store.userStore.user?.username) {\r\n            following ? this.profile.followingCount++ : this.profile.followingCount--;\r\n          }\r\n          this.followings.forEach(profile => {\r\n            if(profile.username === username) {\r\n              profile.following ? profile.followersCount-- : profile.followersCount++;\r\n              profile.following = !profile.following;\r\n            }\r\n          })\r\n          this.loading = false;\r\n\r\n        })\r\n      } catch (error) {\r\n        console.log(error);\r\n        runInAction(() => this.loading = false);\r\n      }\r\n    }\r\n\r\n    loadFollowings = async (predicate: string) => {\r\n      this.loadingFollowings = true;\r\n      try {\r\n        const followings = await agent.Profiles.listFollowings(this.profile!.username, predicate)\r\n        runInAction(() => {\r\n          this.followings = followings;\r\n          this.loadingFollowings = false;\r\n        })\r\n      } catch (error) {\r\n        console.log(error);\r\n        runInAction(() => this.loadingFollowings = false)\r\n      }\r\n    }\r\n\r\n    loadUserActivities = async (username: string, predicate?: string) => {\r\n      this.loadingActivities = true;\r\n      try {\r\n        const activities = await agent.Profiles.listActivities(username, predicate!);\r\n        runInAction(() => {\r\n          this.userActivities = activities;\r\n          this.loadingActivities = false;\r\n        })\r\n      } catch (error) {\r\n        console.log(error);\r\n        runInAction(() => {\r\n          this.loadingActivities = false\r\n        })\r\n      }\r\n    }\r\n\r\n}","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../api/agent\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class UserStore {\r\n  user: User | null = null;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this)\r\n  }\r\n\r\n  setDisplayName(name: string) {\r\n    if (this.user) this.user.displayName = name;\r\n  }\r\n\r\n  get isLoggedIn() {\r\n    return !!this.user;\r\n  }\r\n\r\n  login = async (creds: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Account.login(creds);\r\n      store.commonStore.setToken(user.token);\r\n      runInAction(() => this.user = user)\r\n      history.push('/activities');\r\n      store.modalStore.closeModal();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  logout = () => {\r\n    store.commonStore.setToken(null);\r\n    window.localStorage.removeItem('jwt');\r\n    this.user = null;\r\n    history.push('/')\r\n  }\r\n\r\n  getUser = async () => {\r\n    try {\r\n      const user = await agent.Account.current();\r\n      runInAction(() =>this.user = user)\r\n    } catch (error) {\r\n\r\n    }\r\n  }\r\n\r\n  register = async(creds: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Account.register(creds);\r\n      store.commonStore.setToken(user.token);\r\n      runInAction(() => this.user = user)\r\n      history.push('/activities');\r\n      store.modalStore.closeModal();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  setImage = (image: string) => {\r\n    if(this.user) this.user.image = image;\r\n  }\r\n\r\n}","import { createContext, useContext } from \"react\";\r\nimport ActivityStore from \"./activityStore\";\r\nimport CommentStore from \"./commentStore\";\r\nimport CommonStore from \"./commonStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport ProfileStore from \"./profileStore\";\r\nimport UserStore from \"./userStore\";\r\n\r\ninterface Store {\r\n  activityStore: ActivityStore;\r\n  commonStore: CommonStore;\r\n  userStore: UserStore;\r\n  modalStore: ModalStore;\r\n  profileStore: ProfileStore;\r\n  commentStore: CommentStore;\r\n}\r\n\r\nexport const store: Store = {\r\n  activityStore: new ActivityStore(),\r\n  commonStore: new CommonStore(),\r\n  userStore: new UserStore(),\r\n  modalStore: new ModalStore(),\r\n  profileStore: new ProfileStore(),\r\n  commentStore: new CommentStore()\r\n}\r\n\r\nexport const StoreContext = createContext(store)\r\n\r\nexport function useStore() {\r\n  return useContext(StoreContext)\r\n}","import { makeAutoObservable, reaction } from \"mobx\";\r\nimport { ServerError } from \"../models/serverError\";\r\n\r\nexport default class CommonStore {\r\n  error: ServerError | null = null;\r\n  token: string | null = window.localStorage.getItem('jwt');\r\n  appLoaded = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this)\r\n    reaction(() => this.token, token => {\r\n      if(token) {\r\n        window.localStorage.setItem('jwt', token);\r\n      } else {\r\n        window.localStorage.removeItem('jwt');\r\n      }\r\n    })\r\n  }\r\n\r\n  setServerError = (error: ServerError) => {\r\n    this.error = error;\r\n  }\r\n\r\n  setToken = (token: string | null) => {\r\n    this.token = token;\r\n  }\r\n\r\n  setAppLoaded = () => {\r\n    this.appLoaded = true;\r\n  }\r\n}","import { makeAutoObservable } from \"mobx\"\r\n\r\ninterface Modal {\r\n  open: boolean;\r\n  body: JSX.Element | null;\r\n}\r\n\r\nexport default class ModalStore {\r\n  modal: Modal = {\r\n    open: false,\r\n    body: null\r\n  }\r\n\r\n  constructor() {\r\n    makeAutoObservable(this)\r\n  }\r\n\r\n  openModal = (content: JSX.Element) => {\r\n    this.modal.open = true;\r\n    this.modal.body = content\r\n  }\r\n\r\n  closeModal = () => {\r\n    this.modal.open = false;\r\n    this.modal.body = null;\r\n  }\r\n\r\n}","import { HubConnection, HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\r\nimport { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { ChatComment } from \"../models/comment\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class CommentStore {\r\n  comments: ChatComment[] = [];\r\n  hubConnection: HubConnection | null = null;\r\n  \r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  createHubConnection = (activityId: string) => {\r\n      if(store.activityStore.selectedActivity) {\r\n          this.hubConnection = new HubConnectionBuilder()\r\n            .withUrl(`${process.env.REACT_APP_CHAT_URL}?activityId=${activityId}`, {\r\n              accessTokenFactory: () => store.userStore.user?.token!\r\n            })\r\n            .withAutomaticReconnect()\r\n            .configureLogging(LogLevel.Information)\r\n            .build();\r\n          this.hubConnection.start().catch(error => console.log('Error establishing the connection:', error));\r\n\r\n          this.hubConnection.on('LoadComments', (comments: ChatComment[]) => {\r\n              runInAction(() => {\r\n                comments.forEach(comment => {\r\n                  comment.createdAt = new Date(comment.createdAt + 'Z')\r\n                })\r\n                this.comments = comments\r\n              });\r\n          })\r\n\r\n          this.hubConnection.on('ReceiveComment', (comment: ChatComment) => {\r\n            runInAction(() => {\r\n              comment.createdAt = new Date(comment.createdAt);\r\n              this.comments.unshift(comment)\r\n            })\r\n          })\r\n      }\r\n  }\r\n\r\n  stopHubConnection = () => {\r\n    this.hubConnection?.stop().catch(error => console.log('Error stopping connection:', error));\r\n  }\r\n\r\n  clearComments = () => {\r\n    this.comments = [];\r\n    this.stopHubConnection();\r\n  }\r\n\r\n  addComment = async(values: any) => {\r\n      values.activityId = store.activityStore.selectedActivity?.id;\r\n      try {\r\n        await this.hubConnection?.invoke('SendComment', values)\r\n      } catch(error) {\r\n        console.log(error)\r\n      }\r\n  }\r\n\r\n}\r\n\r\n","import { observer } from 'mobx-react-lite'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { Button, Container, Dropdown, Menu, Image } from 'semantic-ui-react'\r\nimport { useStore } from '../stores/store'\r\n\r\nconst Navbar = () => {\r\n  const {userStore: {user, logout}} = useStore()\r\n  return (\r\n    <Menu inverted fixed=\"top\">\r\n      <Container>\r\n        <Menu.Item as={NavLink} to=\"/\" exact header>\r\n          <img src=\"/assets/logo.png\" alt=\"logo\" style={{ marginRight: '10px' }} />\r\n          Reactivities\r\n        </Menu.Item>\r\n        <Menu.Item as={NavLink} to=\"/activities\" exact name=\"Activities\" />\r\n        <Menu.Item as={NavLink} to=\"/errors\" exact name=\"Errors\" />\r\n        <Menu.Item>\r\n          <Button as={NavLink} to=\"/createActivity\" exact positive content=\"Create Activity\" />\r\n        </Menu.Item>\r\n        {user && (\r\n          <Menu.Item position='right'>\r\n            <Image avatar spaced='right' src={user.image || '/assets/user.png'} />\r\n            <Dropdown pointing='top left' text={user.displayName}>\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item\r\n                  as={Link}\r\n                  to={`/profiles/${user.username}`}\r\n                  text='My profile'\r\n                  icon='user'\r\n                />\r\n                <Dropdown.Item onClick={logout} text='Logout' icon='power' />\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </Menu.Item>\r\n        )}\r\n      </Container>\r\n    </Menu>\r\n  )\r\n}\r\n\r\nexport default observer(Navbar)\r\n","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport Calendar from 'react-calendar'\r\nimport { Header, Menu } from 'semantic-ui-react'\r\nimport { useStore } from '../../../app/stores/store'\r\n\r\nconst ActivityFilters = () => {\r\n  const {activityStore: {predicate, setPredicate}} = useStore();\r\n  return (\r\n    <>\r\n      <Menu vertical size='large' style={{width: '100%', marginTop: 25}}>\r\n        <Header icon='filter' attached color='teal' content='Filters' />\r\n        <Menu.Item\r\n          content='All Activities'\r\n          active={predicate.has(\"all\")}\r\n          onClick={() => setPredicate(\"all\", \"true\")}\r\n        />\r\n        <Menu.Item\r\n          content=\"I'm going\"\r\n          active={predicate.has(\"isGoing\")}\r\n          onClick={() => setPredicate(\"isGoing\", \"true\")}\r\n        />\r\n        <Menu.Item\r\n          content=\"I'm hosting\"\r\n          active={predicate.has(\"isHost\")}\r\n          onClick={() => setPredicate(\"isHost\", \"true\")}\r\n        />\r\n      </Menu>\r\n      <Header />\r\n      <Calendar\r\n        onChange={((date) => setPredicate(\"startDate\", date as Date))}\r\n        value={predicate.get(\"startDate\") || new Date()}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default observer(ActivityFilters)\r\n","import { observer } from 'mobx-react-lite'\r\nimport { SyntheticEvent } from 'react';\r\nimport { Button, Reveal } from 'semantic-ui-react';\r\nimport { Profile } from '../../app/models/profile'\r\nimport { useStore } from '../../app/stores/store';\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nconst FollowButton = ({profile}: Props) => {\r\n  const {profileStore, userStore} = useStore();\r\n  const {updateFollowing, loading} = profileStore;\r\n\r\n  if(userStore.user?.username === profile.username) return null;\r\n\r\n  const handleFollow = (e: SyntheticEvent, username: string) => {\r\n    e.preventDefault();\r\n    profile.following ? updateFollowing(username, false) : updateFollowing(username, true);\r\n  }\r\n\r\n  return (\r\n    <Reveal animated=\"move\">\r\n      <Reveal.Content visible style={{width: '100%'}}>\r\n        <Button\r\n          fluid\r\n          color=\"teal\"\r\n          content={profile.following ? \"Following\" : \"Not Following\"}\r\n        />\r\n      </Reveal.Content>\r\n      <Reveal.Content hidden style={{width: '100%'}}>\r\n        <Button\r\n            fluid\r\n            basic\r\n            color={profile.following ? 'red' : 'green'}\r\n            content={profile.following ? 'Unfollow' : 'follow'}\r\n            loading={loading}\r\n            onClick={(e) => handleFollow(e, profile.username)}\r\n        />\r\n      </Reveal.Content>\r\n    </Reveal>\r\n  )\r\n}\r\n\r\nexport default observer(FollowButton)\r\n","import { observer } from \"mobx-react-lite\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { Card, Icon, Image } from \"semantic-ui-react\"\r\nimport { Profile } from \"../../app/models/profile\"\r\nimport FollowButton from \"./FollowButton\"\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nconst ProfileCard: React.FC<Props> = ({profile}) => {\r\n  const truncate = (str: string | undefined) => {\r\n    if(str) {\r\n      return str.length > 40 ?str.substring(0, 37) + \"...\" : str\r\n    }\r\n  }\r\n  return (\r\n    <Card as={Link} to={`/profiles/${profile.username}`}>\r\n      <Image src={profile.image || '/assets/user.png'} />\r\n      <Card.Content>\r\n        <Card.Header>{profile.displayName}</Card.Header>\r\n        <Card.Description>{truncate(profile.bio)}</Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <Icon name=\"user\" />\r\n        {profile.followersCount} followers\r\n      </Card.Content>\r\n      <FollowButton profile={profile} />\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default observer(ProfileCard)\r\n","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { List, Image, Popup } from 'semantic-ui-react'\r\nimport { Profile } from '../../../app/models/profile'\r\nimport ProfileCard from '../../profiles/ProfileCard'\r\n\r\ninterface Props {\r\n  attendees: Profile[];\r\n}\r\n\r\nconst ActivityListItemAttendee: React.FC<Props> = ({attendees}) => {\r\n  const styles = {\r\n    borderColor: 'orange',\r\n    borderWidth: 3\r\n  }\r\n  return (\r\n    <List horizontal>\r\n      {attendees.map((attendee, index) => (\r\n        <Popup\r\n          hoverable\r\n          key={attendee.username}\r\n          trigger={\r\n            <List.Item key={attendee.username} as={Link} to={`/profiles/${attendee.username}`}>\r\n              <Image\r\n                  size=\"mini\"\r\n                  circular src={attendee.image || '/assets/user.png'}\r\n                  bordered\r\n                  style={attendee.following ? styles : null }\r\n              />\r\n            </List.Item>\r\n          }\r\n        >\r\n          <Popup.Content>\r\n            <ProfileCard profile={attendee}/>\r\n          </Popup.Content>\r\n        </Popup>\r\n      ))}\r\n    </List>\r\n  )\r\n}\r\n\r\nexport default observer(ActivityListItemAttendee)","import { format } from 'date-fns'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Icon, Item, Label, Segment } from 'semantic-ui-react'\r\nimport { Activity } from '../../../app/models/activity'\r\nimport ActivityListItemAttendee from './ActivityListItemAttendee'\r\n\r\ninterface Props {\r\n  key: string;\r\n  activity: Activity;\r\n}\r\n\r\nconst ActivityListItem = ({activity}: Props) => {\r\n\r\n  return (\r\n    <Segment.Group key={activity.id}>\r\n      <Segment>\r\n        {activity.isCancelled && \r\n        <Label attached=\"top\" color=\"red\" content=\"Cancelled\" style={{textAlign: 'center'}} />}\r\n        <Item.Group>\r\n          <Item>\r\n            <Item.Image style={{marginBottom: 3 }} size='tiny' circular src={activity.host?.image ||'/assets/user.png'} />\r\n            <Item.Content>\r\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>\r\n                {activity.title}\r\n              </Item.Header>\r\n              <Item.Description>Hosted by <Link to={`/profiles/${activity.host?.username}`}>{activity.host?.displayName}</Link></Item.Description>\r\n              {activity.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color='orange'>\r\n                    You are hosting this activity\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n              {activity.isGoing && !activity.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color='green'>\r\n                    You are going to this activity;\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n            </Item.Content>\r\n          </Item>\r\n        </Item.Group>\r\n      </Segment>\r\n      <Segment>\r\n        <span>\r\n          <Icon name='clock' />{format(activity.date!, 'dd MMM yyyy h:mm aa')}\r\n          <Icon name='marker' />{activity.venue}\r\n        </span>\r\n      </Segment>\r\n      <Segment secondary>\r\n        <ActivityListItemAttendee attendees={activity.attendees!} />\r\n      </Segment>\r\n      <Segment clearing>\r\n        <span>{activity.description}</span>\r\n        <Button\r\n          as={Link}\r\n          to={`/activities/${activity.id}`}\r\n          color='teal'\r\n          floated='right'\r\n          content='View'\r\n        />\r\n      </Segment>\r\n    </Segment.Group>\r\n  )\r\n}\r\n\r\nexport default ActivityListItem\r\n","import { observer } from 'mobx-react-lite';\r\nimport { Fragment } from 'react';\r\nimport { Header } from 'semantic-ui-react'\r\nimport { useStore } from '../../../app/stores/store';\r\nimport ActivityListItem from './ActivityListItem';\r\n\r\n\r\nconst ActivityList = () => {\r\n\r\n  const {activityStore} = useStore()\r\n  const {groupedActivities} = activityStore\r\n  return (\r\n    <>\r\n    {groupedActivities.map(([group, activities]) => (\r\n      <Fragment key={group}>\r\n        <Header sub color='teal'>\r\n          {group}\r\n        </Header>\r\n          {activities.map((activity) => (\r\n            <ActivityListItem key={activity.id} activity={activity} />\r\n          ))}\r\n      </Fragment>\r\n    ))}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default observer(ActivityList)\r\n","import { Fragment } from 'react';\r\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\r\n\r\nexport default function ActivityListItemPlaceholder() {\r\n    return (\r\n        <Fragment>\r\n            <Placeholder fluid style={{ marginTop: 25 }}>\r\n                <Segment.Group>\r\n                    <Segment style={{ minHeight: 110 }}>\r\n                        <Placeholder>\r\n                            <Placeholder.Header image>\r\n                                <Placeholder.Line />\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Header>\r\n                            <Placeholder.Paragraph>\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Paragraph>\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment>\r\n                        <Placeholder>\r\n                            <Placeholder.Line />\r\n                            <Placeholder.Line />\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment secondary style={{ minHeight: 70 }} />\r\n                    <Segment clearing>\r\n                        <Button disabled color='blue' floated='right' content='View' />\r\n                    </Segment>\r\n                </Segment.Group>\r\n            </Placeholder>\r\n        </Fragment>\r\n    );\r\n};\r\n","import { useEffect, useState } from 'react'\r\nimport InfiniteScroll from 'react-infinite-scroller'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { Grid, Loader } from 'semantic-ui-react'\r\nimport LoadingComponent from '../../../app/layout/LoadingComponent'\r\nimport { PagingParams } from '../../../app/models/pagination'\r\nimport { useStore } from '../../../app/stores/store'\r\nimport ActivityFilters from './ActivityFilters'\r\nimport ActivityList from './ActivityList'\r\nimport ActivityListItemPlaceholder from './ActivityListItemPlaceholder'\r\n\r\nconst ActivityDashboard = () => {\r\n\r\n  const {activityStore} = useStore()\r\n  const {loadActivities, activityRegistry, setPagingParams, pagination} = activityStore;\r\n  const [loadingNext, setLoadingNext] = useState(false);\r\n\r\n  const handleGetNext = () => {\r\n    setLoadingNext(true);\r\n    setPagingParams(new PagingParams(pagination!.currentPage + 1));\r\n    loadActivities().then(() => setLoadingNext(false))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(activityRegistry.size <= 1) loadActivities()\r\n  }, [activityRegistry.size, loadActivities])\r\n\r\n  // if (activityStore.loadingInitial && !loadingNext) return <LoadingComponent content={'Loading Activities'} />\r\n\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width='10'>\r\n        {activityStore.loadingInitial && !loadingNext ? (\r\n          <>\r\n          <ActivityListItemPlaceholder />\r\n          <ActivityListItemPlaceholder />\r\n          </>\r\n        ) : (\r\n          <InfiniteScroll \r\n            pageStart={0}\r\n            loadMore={handleGetNext}\r\n            hasMore={!loadingNext && !!pagination && pagination.currentPage < pagination.totalPages}\r\n            initialLoad={false}\r\n            >\r\n            <ActivityList />\r\n          </InfiniteScroll>\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width='6'>\r\n        <ActivityFilters />\r\n      </Grid.Column>\r\n      <Grid.Column width={10}>\r\n        <Loader active={loadingNext} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default observer(ActivityDashboard)\r\n","import { useField } from 'formik'\r\nimport React from 'react'\r\nimport { Form, Label } from 'semantic-ui-react'\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  label?: string;\r\n  type?: string;\r\n}\r\n\r\nconst MyTextInput = (props: Props) => {\r\n  const [field, meta] = useField(props.name)\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <input {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color='red'>{meta.error}</Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  )\r\n}\r\n\r\nexport default MyTextInput\r\n","import { ErrorMessage, Form, Formik } from \"formik\"\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Button, Header, Label } from \"semantic-ui-react\"\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\"\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nconst LoginForm = () => {\r\n  const {userStore} = useStore();\r\n  return (\r\n    <Formik initialValues={{email: '', password: '', error: null}}\r\n      onSubmit={(values, {setErrors}) => userStore.login(values).catch(error => \r\n        setErrors({error: 'Invalid Email or password'}\r\n      ))}\r\n    >\r\n      {({handleSubmit, isSubmitting, errors }) => (\r\n        <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\r\n          <Header as='h2' content='Login to Reactivities' color='teal' textAlign='center' />\r\n          <MyTextInput name='email' placeholder='Email' />\r\n          <MyTextInput name='password' placeholder='Password' type=\"password\" />\r\n          <ErrorMessage\r\n            name='error' render={() => <Label style={{marginBottom: 10}} basic color='red' content={errors.error} />}\r\n            />\r\n          <Button loading={isSubmitting} positive content=\"Login\" type=\"submit\" fluid />\r\n        </Form>\r\n      )}\r\n\r\n    </Formik>\r\n  )\r\n}\r\n\r\nexport default observer(LoginForm)\r\n","import React from 'react'\r\nimport { Message } from 'semantic-ui-react'\r\n\r\ninterface Props {\r\n  errors: any;\r\n}\r\n\r\nconst ValidationErrors: React.FC<Props> = ({errors}) => {\r\n  return (\r\n    <Message error>\r\n      {errors ? (\r\n        <Message.List>\r\n          {errors.map((err: any, i: any) => (\r\n            <Message.Item key={i}>\r\n              {err}\r\n            </Message.Item>\r\n          ))}\r\n        </Message.List>\r\n      ) : null}\r\n    </Message>\r\n  )\r\n}\r\n\r\nexport default ValidationErrors\r\n","import { ErrorMessage, Form, Formik } from \"formik\"\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Button, Header } from \"semantic-ui-react\"\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\"\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport * as Yup from 'yup'\r\nimport ValidationErrors from \"../../app/errors/ValidationErrors\";\r\n\r\n\r\nconst LoginForm = () => {\r\n  const {userStore} = useStore();\r\n  return (\r\n    <Formik initialValues={{displayName: '', userName: '', email: '', password: '', error: null}}\r\n      onSubmit={(values, {setErrors}) => userStore.register(values).catch(error => \r\n        setErrors({error: 'Invalid Email or password'}\r\n      ))}\r\n      validationSchema={Yup.object({\r\n        displayName: Yup.string().required(),\r\n        password: Yup.string().required(),\r\n        email: Yup.string().required().email(),\r\n        userName: Yup.string().required()\r\n      })}\r\n    >\r\n      {({handleSubmit, isSubmitting, errors, isValid, dirty }) => (\r\n        <Form className='ui form error' onSubmit={handleSubmit} autoComplete='off'>\r\n          <Header as='h2' content='Sign up to Reactivities' color='teal' textAlign='center' />\r\n          <MyTextInput name='displayName' placeholder='Display Name' />\r\n          <MyTextInput name='userName' placeholder='User Name' />\r\n          <MyTextInput name='email' placeholder='Email' />\r\n          <MyTextInput name='password' placeholder='Password' type=\"password\" />\r\n          <ErrorMessage\r\n            name='error'\r\n            render={() => <ValidationErrors errors={errors.error}/>}\r\n          />\r\n          <Button disabled={!isValid || !dirty || isSubmitting} loading={isSubmitting} positive content=\"Register\" type=\"submit\" fluid />\r\n        </Form>\r\n      )}\r\n\r\n    </Formik>\r\n  )\r\n}\r\n\r\nexport default observer(LoginForm)\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Link } from \"react-router-dom\"\r\nimport { Container, Header, Segment, Image, Button } from \"semantic-ui-react\"\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport LoginForm from \"../users/LoginForm\";\r\nimport RegisterForm from \"../users/RegisterForm\";\r\n\r\nconst HomePage = () => {\r\n  const {userStore, modalStore} = useStore();\r\n  return (\r\n    <Segment inverted textAlign='center' vertical className='masthead'>\r\n      <Container text>\r\n        <Header as='h1' inverted>\r\n          <Image size='massive' src='/assets/logo.png' alt='logo' style={{marginBottom: 12}} />\r\n        </Header>\r\n        {userStore.isLoggedIn ? (\r\n          <>\r\n          <Header as='h2' inverted content='Welcome to Reactivities' />\r\n          <Button as={Link} to='/activities' size='huge' inverted>Go to the Activities!</Button>\r\n          </>\r\n        ) : (\r\n          <>\r\n          <Button onClick={() => modalStore.openModal(<LoginForm />)} size='huge' inverted>Login</Button>\r\n          <Button onClick={() => modalStore.openModal(<RegisterForm />)} size='huge' inverted>Register</Button>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </Segment>\r\n  )\r\n}\r\n\r\nexport default observer(HomePage)\r\n","import { Dimmer, Loader } from 'semantic-ui-react'\r\n\r\ninterface Props {\r\n  inverted?: boolean;\r\n  content?: string;\r\n}\r\n\r\nconst LoadingComponent = ({inverted = true, content=\"Loading...\"}: Props) => {\r\n  return (\r\n    <Dimmer active={true} inverted={inverted}>\r\n      <Loader content={content} />\r\n    </Dimmer>\r\n  )\r\n}\r\n\r\nexport default LoadingComponent\r\n","import { useField } from 'formik'\r\nimport React from 'react'\r\nimport { Form, Label } from 'semantic-ui-react'\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  rows: number;\r\n  label?: string;\r\n}\r\n\r\nconst MyTextInput = (props: Props) => {\r\n  const [field, meta] = useField(props.name)\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <textarea {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color='red'>{meta.error}</Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  )\r\n}\r\n\r\nexport default MyTextInput\r\n","import { useField } from 'formik'\r\nimport React from 'react'\r\nimport { Form, Label, Select } from 'semantic-ui-react'\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  options: any;\r\n  label?: string;\r\n}\r\n\r\nconst MySelectInput = (props: Props) => {\r\n  const [field, meta, helpers] = useField(props.name)\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <Select\r\n        clearable\r\n        options={props.options}\r\n        value={field.value || null}\r\n        onChange={(e, d) => helpers.setValue(d.value)}\r\n        onBlur={() => helpers.setTouched(true)}\r\n        placeholder={props.placeholder}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color='red'>{meta.error}</Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  )\r\n}\r\n\r\nexport default MySelectInput\r\n","export const categoryOptions = [\r\n  {text: 'Drinks', value: 'drinks'},\r\n  {text: 'Culture', value: 'culture'},\r\n  {text: 'Film', value: 'film'},\r\n  {text: 'Food', value: 'food'},\r\n  {text: 'Music', value: 'music'},\r\n  {text: 'Travel', value: 'travel'}\r\n]","import { useField } from 'formik'\r\nimport DatePicker, { ReactDatePickerProps } from 'react-datepicker'\r\nimport { Form } from 'semantic-ui-react'\r\n\r\nconst MyDateInput = (props: Partial<ReactDatePickerProps>) => {\r\n  const [field, meta, helpers] = useField(props.name!)\r\n  return (\r\n    <Form.Field>\r\n      <DatePicker\r\n        {...field}\r\n        {...props}\r\n        selected={(field.value && new Date(field.value)) || null}\r\n        onChange={(value: any) => helpers.setValue(value)}\r\n      />\r\n    </Form.Field>\r\n  )\r\n}\r\n\r\nexport default MyDateInput\r\n","import { Formik } from \"formik\"\r\nimport { observer } from \"mobx-react-lite\"\r\nimport { useEffect } from \"react\"\r\nimport { useState } from \"react\"\r\nimport { Link, useHistory, useParams } from \"react-router-dom\"\r\nimport { Button, Form, Header, Segment } from \"semantic-ui-react\"\r\nimport { v4 as uuid } from \"uuid\"\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\"\r\nimport { useStore } from \"../../../app/stores/store\"\r\nimport * as Yup from 'yup'\r\nimport MyTextInput from \"../../../app/common/form/MyTextInput\"\r\nimport MyTextArea from \"../../../app/common/form/MyTextArea\"\r\nimport MySelectInput from \"../../../app/common/form/MySelectInput\"\r\nimport { categoryOptions } from \"../../../app/common/options/categoryOptions\"\r\nimport MyDateInput from \"../../../app/common/form/MyDateInput\"\r\nimport { ActivityFormValues } from \"../../../app/models/activity\"\r\n\r\nconst ActivityForm = () => {\r\n  const {activityStore} = useStore()\r\n  const history = useHistory()\r\n  const {loadActivity, createActivity, updateActivity, loadingInitial} = activityStore\r\n  const {id} = useParams<{id: string}>();\r\n  const [activity, setActivity] = useState<ActivityFormValues>(new ActivityFormValues());\r\n\r\n  const validationSchema = Yup.object({\r\n    title: Yup.string().required('The activity title is required'),\r\n    description: Yup.string().required('The activity description is required'),\r\n    category: Yup.string().required('The activity category is required'),\r\n    date: Yup.string().required('The activity date is required'),\r\n    city: Yup.string().required('The activity city is required'),\r\n    venue: Yup.string().required('The activity venue is required'),\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (id) loadActivity(id).then((activity) => setActivity(new ActivityFormValues(activity)))\r\n  }, [id, loadActivity])\r\n\r\n  function handleFormSubmit(e: ActivityFormValues) {\r\n    if(!activity.id) {\r\n      let newActivity = {\r\n        ...e,\r\n        id: uuid()\r\n      }\r\n      createActivity(newActivity).then(() => {\r\n        history.push(`/activities/${newActivity.id}`)\r\n      })\r\n    } else {\r\n      updateActivity(activity).then(() => {\r\n        history.push(`/activities/${activity.id}`)\r\n      })\r\n    }\r\n  }\r\n\r\n  // function handleInputChange(event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) {\r\n  //   const {name, value} = event.target\r\n  //   setActivity({...activity, [name]: value})\r\n  // }\r\n\r\n  if(loadingInitial) return <LoadingComponent content=\"Loading Activity...\" />\r\n\r\n  return (\r\n    <Segment clearing>\r\n      <Header content='Activity Details' sub color='teal' />\r\n      <Formik\r\n        validationSchema={validationSchema}\r\n        enableReinitialize\r\n        initialValues={activity}\r\n        onSubmit={values => handleFormSubmit(values)}\r\n      >\r\n        {({handleSubmit, isValid, isSubmitting, dirty}) => (\r\n          <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\r\n            <MyTextInput name='title' placeholder='title' />\r\n            <MyTextArea rows={3} placeholder='Description' name='description' />\r\n            <MySelectInput options={categoryOptions} placeholder='Description' name='description' />\r\n            <MyTextInput placeholder='Category' name='category' />\r\n            <MyDateInput \r\n              placeholderText='Date'\r\n              name='date'\r\n              showTimeSelect\r\n              timeCaption='time'\r\n              dateFormat='MMMM d, yyyy h:mm aa'\r\n            />\r\n            <Header content='Activity Details' sub color='teal' />\r\n            <MyTextInput placeholder='City' name='city' />\r\n            <MyTextInput placeholder='Venue' name='venue' />\r\n            <Button \r\n              disabled={isSubmitting || !dirty || !isValid}\r\n            loading={isSubmitting} floated='right' positive type='submit' content='Submit' />\r\n            <Button as={Link} to=\"/activities\" floated='right' negative type='button' content='cancel' />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Segment>\r\n  )\r\n}\r\nexport default observer(ActivityForm)\r\n","import { Field, FieldProps, Form, Formik } from 'formik';\r\nimport { observer } from 'mobx-react-lite'\r\nimport React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport {Segment, Header, Comment, Loader} from 'semantic-ui-react'\r\nimport { useStore } from '../../../app/stores/store';\r\nimport * as Yup from 'yup'\r\nimport { formatDistanceToNow } from 'date-fns';\r\n\r\ninterface Props {\r\n  activityId: string;\r\n}\r\n\r\n\r\nconst ActivityDetailedChat: React.FC<Props> = ({activityId}) => {\r\n  const {commentStore} = useStore();\r\n\r\n  useEffect(() => {\r\n    \r\n    if(activityId) {\r\n        commentStore.createHubConnection(activityId)\r\n    }\r\n    return () => {\r\n      commentStore.clearComments();\r\n    }\r\n  }, [commentStore, activityId])\r\n\r\n    return (\r\n        <>\r\n            <Segment\r\n                textAlign='center'\r\n                attached='top'\r\n                inverted\r\n                color='teal'\r\n                style={{border: 'none'}}\r\n            >\r\n                <Header>Chat about this event</Header>\r\n            </Segment>\r\n            <Segment attached clearing>\r\n              <Formik\r\n                  onSubmit={(values, {resetForm}) => commentStore.addComment(values).then(() => resetForm())}\r\n                  initialValues={{body: ''}}\r\n                  validationSchema={Yup.object({\r\n                    body: Yup.string().required()\r\n                  })}\r\n              >\r\n                  {({ isSubmitting, isValid, handleSubmit }) => (\r\n                    <Form className=\"ui form\">\r\n                      <Field name=\"body\">\r\n                        {(props: FieldProps)=> (\r\n                            <div style={{position: 'relative'}}>\r\n                              <Loader active={isSubmitting} />\r\n                              <textarea\r\n                                placeholder=\"Enter your comment (Enter to submit, SHIFT + enter for new line).\"\r\n                                rows={2}\r\n                                {...props.field}\r\n                                onKeyPress={e => {\r\n                                  if(e.key === 'Enter' && e.shiftKey) {\r\n                                    return;\r\n                                  }\r\n                                  if(e.key === 'Enter' && !e.shiftKey) {\r\n                                    e.preventDefault();\r\n                                    isValid && handleSubmit()\r\n                                  }\r\n                                }}\r\n                              />\r\n                            </div>\r\n                        )}\r\n                      </Field>\r\n                    </Form>\r\n                  )}\r\n                  </Formik>\r\n                <Comment.Group>\r\n                  {commentStore.comments.map((comment) => (\r\n                    <Comment key={comment.id}>\r\n                        <Comment.Avatar src={comment.image || '/assets/user.png'}/>\r\n                        <Comment.Content>\r\n                            <Comment.Author as={Link} to={`/profiles/${comment.username}`}>{comment.username}</Comment.Author>\r\n                            <Comment.Metadata>\r\n                                <div>{formatDistanceToNow(comment.createdAt)} ago</div>\r\n                            </Comment.Metadata>\r\n                            <Comment.Text style={{whiteSpace: 'pre-wrap'}}>{comment.body}</Comment.Text>\r\n                        </Comment.Content>\r\n                    </Comment>\r\n                  ))}\r\n                </Comment.Group>\r\n            </Segment>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default observer(ActivityDetailedChat)\r\n\r\n","import { format } from 'date-fns';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Link } from 'react-router-dom';\r\nimport {Button, Header, Item, Segment, Image, Label} from 'semantic-ui-react'\r\nimport {Activity} from \"../../../app/models/activity\";\r\nimport { useStore } from '../../../app/stores/store';\r\n\r\nconst activityImageStyle = {\r\n    filter: 'brightness(30%)'\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n    position: 'absolute',\r\n    bottom: '5%',\r\n    left: '5%',\r\n    width: '100%',\r\n    height: 'auto',\r\n    color: 'white'\r\n};\r\n\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nexport default observer (function ActivityDetailedHeader({activity}: Props) {\r\n  const {activityStore: {updateAttendance, loading, cancelActivityToggle}} = useStore()\r\n    return (\r\n        <Segment.Group>\r\n            <Segment basic attached='top' style={{padding: '0'}}>\r\n              {activity.isCancelled && <Label style={{position: 'absolute', zIndex: 1000, left: -14, top: 20}} ribbon color='red' content=\"Cancelled\" />}\r\n                <Image src={`/assets/categoryImages/${activity.category}.jpg`} fluid style={activityImageStyle}/>\r\n                <Segment style={activityImageTextStyle} basic>\r\n                    <Item.Group>\r\n                        <Item>\r\n                            <Item.Content>\r\n                                <Header\r\n                                    size='huge'\r\n                                    content={activity.title}\r\n                                    style={{color: 'white'}}\r\n                                />\r\n                                <p>{format(activity.date!, 'dd MMM yyyy')}</p>\r\n                                <p>\r\n                                    Hosted by <strong>\r\n                                      <Link to={`/profiles/${activity.host?.username}`}>\r\n                                        {activity.host?.displayName}\r\n                                      </Link>\r\n                                    </strong>\r\n                                </p>\r\n                            </Item.Content>\r\n                        </Item>\r\n                    </Item.Group>\r\n                </Segment>\r\n            </Segment>\r\n            <Segment clearing attached='bottom'>\r\n              {activity.isHost ? (\r\n                <>\r\n                <Button\r\n                  color={activity.isCancelled ? 'green' : 'red'}\r\n                  floated='left'\r\n                  basic\r\n                  content={activity.isCancelled ? 'Re-activate Activity' : \"Cancel Activity\"}\r\n                  onClick={cancelActivityToggle}\r\n                  loading={loading}\r\n                />\r\n                  <Button\r\n                    as={Link}\r\n                    disabled={activity.isCancelled!}\r\n                    to={`/manage/${activity.id}`}\r\n                    color='orange'\r\n                    floated='right'\r\n                  >\r\n                      Manage Event\r\n                  </Button>\r\n                </>\r\n\r\n              ) : activity.isGoing ? (\r\n                <Button loading={loading} onClick={updateAttendance}>Cancel attendance</Button>\r\n              ) : (\r\n                <Button loading={loading} onClick={updateAttendance} color='teal'>Join Activity</Button>\r\n              )}\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n})\r\n","import { format } from 'date-fns';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport {Segment, Grid, Icon} from 'semantic-ui-react'\r\nimport {Activity} from \"../../../app/models/activity\";\r\n\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nexport default observer(function ActivityDetailedInfo({activity}: Props) {\r\n    return (\r\n        <Segment.Group>\r\n            <Segment attached='top'>\r\n                <Grid>\r\n                    <Grid.Column width={1}>\r\n                        <Icon size='large' color='teal' name='info'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={15}>\r\n                        <p>{activity.description}</p>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width={1}>\r\n                        <Icon name='calendar' size='large' color='teal'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={15}>\r\n            <span>\r\n              {format(activity.date!, 'dd MMM yyyy h:mm aa')}\r\n            </span>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width={1}>\r\n                        <Icon name='marker' size='large' color='teal'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={11}>\r\n                        <span>{activity.venue}, {activity.city}</span>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n})\r\n","import { Segment, List, Label, Item, Image } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { Activity } from '../../../app/models/activity'\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nconst ActivityDetailedSidebar: React.FC<Props> =  ({activity: { attendees, host }}) => {\r\n  if(!attendees) return null;\r\n    return (\r\n        <>\r\n            <Segment\r\n                textAlign='center'\r\n                style={{ border: 'none' }}\r\n                attached='top'\r\n                secondary\r\n                inverted\r\n                color='teal'\r\n            >\r\n                {attendees.length} {attendees.length === 1 ? 'Person' : 'People'} going\r\n            </Segment>\r\n            <Segment attached>\r\n                <List relaxed divided>\r\n                  {attendees.map((attendee, idx) => (\r\n                    <Item style={{ position: 'relative' }} key={attendee.username}>\r\n                      {attendee.username === host?.username && (\r\n                        <Label\r\n                            style={{ position: 'absolute' }}\r\n                            color='orange'\r\n                            ribbon='right'\r\n                        >\r\n                            Host\r\n                        </Label>\r\n                      )}\r\n                        <Image size='tiny' src={attendee.image || '/assets/user.png'} />\r\n                        <Item.Content verticalAlign='middle'>\r\n                            <Item.Header as='h3'>\r\n                                <Link to={`/profiles/${attendee.username}`}>{attendee.displayName}</Link>\r\n                            </Item.Header>\r\n                            {attendee.following &&<Item.Extra style={{ color: 'orange' }}>Following</Item.Extra>}\r\n                        </Item.Content>\r\n                    </Item>\r\n                  ))}\r\n                </List>\r\n            </Segment>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default observer(ActivityDetailedSidebar);\r\n","import { observer } from 'mobx-react-lite'\r\nimport { useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { Grid } from 'semantic-ui-react'\r\nimport LoadingComponent from '../../../app/layout/LoadingComponent'\r\nimport { useStore } from '../../../app/stores/store'\r\nimport ActivityDetailedChat from './ActivityDetailedChat'\r\nimport ActivityDetailedHeader from './ActivityDetailedHeader'\r\nimport ActivityDetailedInfo from './ActivityDetailedInfo'\r\nimport ActivityDetailedSidebar from './ActivityDetailedSidebar'\r\n\r\n\r\nconst ActivityDetails = () => {\r\n  const {activityStore} = useStore()\r\n  const {selectedActivity: activity, loadActivity, loadingInitial, clearSelectedActivity} = activityStore\r\n  const {id} = useParams<{id: string}>();\r\n\r\n  useEffect(() => {\r\n    if(id) loadActivity(id)\r\n    return () => clearSelectedActivity();\r\n  }, [id, loadActivity, clearSelectedActivity])\r\n\r\n  if(loadingInitial || !activity) return <LoadingComponent />\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <ActivityDetailedHeader activity={activity} />\r\n        <ActivityDetailedInfo activity={activity} />\r\n        <ActivityDetailedChat activityId={activity.id} />\r\n      </Grid.Column>\r\n      <Grid.Column width={6}>\r\n        <ActivityDetailedSidebar activity={activity} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default observer(ActivityDetails)\r\n","\r\nimport { useState } from 'react';\r\nimport {Button, Header, Segment} from \"semantic-ui-react\";\r\nimport axios from 'axios';\r\nimport ValidationErrors from './ValidationErrors';\r\n\r\nexport default function TestErrors() {\r\n  const baseUrl = process.env.REACT_APP_API_URL;\r\n  const [errors, setErrors] = useState(null)\r\n\r\n  function handleNotFound() {\r\n        axios.get(baseUrl + 'buggy/not-found').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadRequest() {\r\n        axios.get(baseUrl + 'buggy/bad-request').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleServerError() {\r\n        axios.get(baseUrl + 'buggy/server-error').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleUnauthorised() {\r\n        axios.get(baseUrl + 'buggy/unauthorised').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadGuid() {\r\n        axios.get(baseUrl + 'activities/notaguid').catch(err => console.log(err));\r\n    }\r\n\r\n    function handleValidationError() {\r\n        axios.post(baseUrl + 'activities', {}).catch(err => setErrors(err));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header as='h1' content='Test Error component' />\r\n            <Segment>\r\n                <Button.Group widths='7'>\r\n                    <Button onClick={handleNotFound} content='Not Found' basic primary />\r\n                    <Button onClick={handleBadRequest} content='Bad Request' basic primary />\r\n                    <Button onClick={handleValidationError} content='Validation Error' basic primary />\r\n                    <Button onClick={handleServerError} content='Server Error' basic primary />\r\n                    <Button onClick={handleUnauthorised} content='Unauthorised' basic primary />\r\n                    <Button onClick={handleBadGuid} content='Bad Guid' basic primary />\r\n                </Button.Group>\r\n            </Segment>\r\n            {errors && \r\n              <ValidationErrors errors={errors} />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Header, Icon, Segment } from 'semantic-ui-react'\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <Segment placeholder>\r\n      <Header icon>\r\n        <Icon name='search' />\r\n        Oops - We've looked everywhere and could not find this.\r\n      </Header>\r\n      <Segment.Inline>\r\n        <Button as={Link} to='/activities' primary>\r\n          Return to Activities Page\r\n        </Button>\r\n      </Segment.Inline>\r\n    </Segment>\r\n  )\r\n}\r\n\r\nexport default NotFound\r\n","import React from 'react'\r\nimport { Container, Header, Segment } from 'semantic-ui-react'\r\nimport { useStore } from '../stores/store'\r\n\r\nconst ServerError = () => {\r\n  const {commonStore} = useStore()\r\n  return (\r\n    <Container>\r\n      <Header as='h1' content='Server Error' />\r\n      <Header sub as='h5' color='red' content={commonStore.error?.message} />\r\n      {commonStore.error?.details &&\r\n        <Segment>\r\n          <Header as='h4' content='Stack trace' color='teal' />\r\n          <code style={{marginTop: '10px'}}>\r\n            {commonStore.error.details}\r\n          </code>\r\n        </Segment>\r\n      }\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ServerError\r\n","import { observer } from \"mobx-react-lite\"\r\nimport { Modal } from \"semantic-ui-react\"\r\nimport { useStore } from \"../../stores/store\"\r\n\r\nconst ModalContainer = () => {\r\n  const {modalStore} = useStore()\r\n  return (\r\n    <Modal open={modalStore.modal.open} onClose={modalStore.closeModal} size='mini'>\r\n      <Modal.Content>\r\n        {modalStore.modal.body}\r\n      </Modal.Content>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default observer(ModalContainer)\r\n","import { Form, Formik } from 'formik';\r\nimport React from 'react'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { Button } from 'semantic-ui-react';\r\nimport * as Yup from 'yup';\r\nimport MyTextArea from '../../app/common/form/MyTextArea';\r\nimport MyTextInput from '../../app/common/form/MyTextInput';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\ninterface Props {\r\n  setEditMode: (editMode: boolean) => void; \r\n}\r\n\r\n\r\nconst ProfileEditForm:React.FC<Props> = ({setEditMode}) => {\r\n   const {profileStore: {profile, updateProfile}} = useStore();\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{displayName: profile?.displayName || '', bio:\r\n      profile?.bio || ''}}\r\n      onSubmit={values => {\r\n        updateProfile(values).then(() => {\r\n        setEditMode(false);\r\n      })\r\n      }}\r\n      validationSchema={Yup.object({\r\n       displayName: Yup.string().required()\r\n      })}\r\n    >\r\n      {({isSubmitting, isValid, dirty}) => (\r\n        <Form className='ui form'>\r\n        <MyTextInput placeholder='Display Name'\r\n        name='displayName' />\r\n        <MyTextArea rows={3} placeholder='Add your bio' name='bio' />\r\n        <Button\r\n          positive\r\n          type='submit'\r\n          loading={isSubmitting}\r\n          content='Update profile'\r\n          floated='right'\r\n          disabled={!isValid || !dirty}\r\n        />\r\n        </Form>\r\n      )}\r\n </Formik>\r\n  )\r\n}\r\n\r\nexport default observer(ProfileEditForm)\r\n","import React, {useState} from 'react';\r\nimport {useStore} from \"../../app/stores/store\";\r\nimport {Button, Grid, Header, Tab} from \"semantic-ui-react\";\r\nimport ProfileEditForm from \"./ProfileEditForm\";\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nconst ProfileAbout = () => {\r\n  const {profileStore} = useStore();\r\n  const {isCurrentUser, profile} = profileStore;\r\n  const [editMode, setEditMode] = useState(false);\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width='16'>\r\n          <Header floated='left' icon='user' content={`About ${profile?.displayName}`} />\r\n        {isCurrentUser && (\r\n          <Button\r\n            floated='right'\r\n            basic\r\n            content={editMode ? 'Cancel' : 'Edit Profile'}\r\n            onClick={() => setEditMode(!editMode)}\r\n          />\r\n        )}\r\n        </Grid.Column>\r\n        <Grid.Column width='16'>\r\n          {editMode ? <ProfileEditForm setEditMode={setEditMode} /> :\r\n          <span style={{whiteSpace: 'pre-wrap'}}>{profile?.bio}</span>}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  )\r\n}\r\n\r\nexport default observer(ProfileAbout);","import { SyntheticEvent, useEffect } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Tab, Grid, Header, Card, Image, TabProps } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { UserActivity } from '../../app/models/profile';\r\nimport { format } from 'date-fns';\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nconst panes = [\r\n { menuItem: 'Future Events', pane: { key: 'future' } },\r\n { menuItem: 'Past Events', pane: { key: 'past' } },\r\n { menuItem: 'Hosting', pane: { key: 'hosting' } }\r\n];\r\n\r\nconst ProfileActivities = () => {\r\n  const { profileStore } = useStore();\r\n  const { loadUserActivities,\r\n    profile,\r\n    loadingActivities,\r\n    userActivities\r\n  } = profileStore;\r\n \r\n  useEffect(() => {\r\n    loadUserActivities(profile!.username);\r\n    }, [loadUserActivities, profile]);\r\n\r\n  const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\r\n    loadUserActivities(profile!.username, panes[data.activeIndex as\r\n    number].pane.key);\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingActivities}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated='left' icon='calendar'\r\n          content={'Activities'} />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Tab\r\n          panes={panes}\r\n          menu={{ secondary: true, pointing: true }}\r\n          onTabChange={(e, data) => handleTabChange(e, data)}\r\n          />\r\n        <br />\r\n        <Card.Group itemsPerRow={4}>\r\n          {userActivities.map((activity: UserActivity) => (\r\n            <Card\r\n            as={Link}\r\n            to={`/activities/${activity.id}`}\r\n            key={activity.id} >\r\n              <Image\r\n              src={`/assets/categoryImages/${activity.category}.jpg`}\r\n              style={{ minHeight: 100, objectFit:\r\n              'cover' }}\r\n              />\r\n            <Card.Content>\r\n              <Card.Header\r\n              textAlign='center'>{activity.title}</Card.Header>\r\n              <Card.Meta textAlign='center'>\r\n              <div>{format(new Date(activity.date),\r\n              'do LLL')}</div>\r\n              <div>{format(new Date(activity.date),\r\n              'h:mm a')}</div>\r\n              </Card.Meta>\r\n            </Card.Content>\r\n            </Card>\r\n          ))}\r\n        </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n}\r\n\r\nexport default observer(ProfileActivities)\r\n","import { observer } from 'mobx-react-lite';\r\nimport { Card, Grid, Header, Tab } from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store';\r\nimport ProfileCard from './ProfileCard';\r\n\r\nconst ProfileFollowings = () => {\r\n  const {profileStore} = useStore();\r\n  const {profile, followings, loadingFollowings, activeTab} = profileStore;\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingFollowings}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header \r\n            floated=\"left\"\r\n            icon=\"user\"\r\n            content={activeTab === 3 ? `People following ${profile?.displayName}` : `People ${profile?.displayName} is following`} />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Card.Group itemsPerRouw={4}>\r\n            {followings.map(profile => (\r\n              <ProfileCard key={profile.username} profile={profile} />\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  )\r\n}\r\n\r\nexport default observer(ProfileFollowings)\r\n","import { Cropper } from 'react-cropper'\r\nimport 'cropperjs/dist/cropper.css'\r\n\r\ninterface Props {\r\n  imagePreview: string;\r\n  setCropper: (cropper: Cropper) => void;\r\n}\r\n\r\nconst PhotoWidgetCropper: React.FC<Props> = ({imagePreview, setCropper}) => (\r\n    <Cropper\r\n      src={imagePreview}\r\n      style={{\r\n        height: 200,\r\n        width: '100%'\r\n      }}\r\n      initialAspectRatio={1}\r\n      aspectRatio={1}\r\n      preview='.img-preview'\r\n      guides={false}\r\n      viewMode={1}\r\n      autoCropArea={1}\r\n      background={false}\r\n      onInitialized={cropper => setCropper(cropper)}\r\n\r\n    />\r\n  )\r\n\r\nexport default PhotoWidgetCropper\r\n","import React, {useCallback} from 'react'\r\nimport {useDropzone} from 'react-dropzone'\r\nimport { Header, Icon } from 'semantic-ui-react'\r\n\r\ninterface Props {\r\n  setFiles: (file: File) => void\r\n}\r\n\r\nconst PhotoWidgetDropzone: React.FC<Props> = ({setFiles}) => {\r\n  const dzStyles = {\r\n    border: 'dashed 3px #eee',\r\n    borderColor: '#eee',\r\n    borderRadius: '5px',\r\n    paddingTop: '30px',\r\n    textAlign: 'center' as 'center',\r\n    height: 200\r\n  }\r\n\r\n  const dzActive = {\r\n    borderColor: 'green'\r\n  }\r\n\r\n  const onDrop = useCallback(acceptedFiles => {\r\n    setFiles(acceptedFiles.map((file: any) => Object.assign(file, {\r\n      preview: URL.createObjectURL(file)\r\n    })));\r\n  }, [setFiles])\r\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\r\n\r\n  return (\r\n    <div {...getRootProps()} style={isDragActive ? {...dzStyles, ...dzActive} : dzStyles}>\r\n      <input {...getInputProps()} />\r\n      <Icon name=\"upload\" size=\"huge\" />\r\n      <Header content=\"Drop image here\" />\r\n      {isDragActive ?\r\n          <p>Drop the files here ...</p> :\r\n          <p>Drag 'n' drop some files here, or click to select files</p>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PhotoWidgetDropzone","import { useEffect, useState } from 'react'\r\nimport { Button, Grid, Header } from 'semantic-ui-react'\r\nimport PhotoWidgetCropper from './PhotoWidgetCropper';\r\nimport PhotoWidgetDropzone from './PhotoWidgetDropzone'\r\n\r\ninterface Props {\r\n  uploading: boolean;\r\n  uploadPhoto: (file: Blob) => void;\r\n}\r\n\r\nconst PhotoUploadWidget: React.FC<Props> = ({uploading, uploadPhoto}) => {\r\n  const [files, setFiles] = useState<any>([]);\r\n  const [cropper, setCropper] = useState<Cropper>();\r\n\r\n  function onCrop() {\r\n    if (cropper) {\r\n      cropper.getCroppedCanvas().toBlob(blob => uploadPhoto(blob!));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      files.forEach((file: any) => URL.revokeObjectURL(file.preview))\r\n    }\r\n  }, [files])\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 1 - Add Photo\" />\r\n        <PhotoWidgetDropzone setFiles={setFiles}/>\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 2 - Resize Image\" />\r\n        {files && files.length > 0 && (\r\n          <PhotoWidgetCropper setCropper={setCropper} imagePreview={files[0].preview} />\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 3 - Preview & Uploads\" />\r\n        {files && files.length > 0 &&\r\n          <>\r\n            <div className=\"img-preview\" style={{minHeight: 200, overflow: \"hidden\"}} />\r\n            <Button.Group widths={2}>\r\n              <Button loading={uploading} onClick={onCrop} positive icon=\"check\" />\r\n              <Button disabled={uploading} onClick={() => setFiles([])} icon=\"close\" />\r\n            </Button.Group>\r\n          </>\r\n        }\r\n      </Grid.Column>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default PhotoUploadWidget\r\n","import { SyntheticEvent, useState } from \"react\";\r\nimport { observer } from \"mobx-react-lite\"\r\nimport { Card, Header, Tab, Image, Grid, Button } from \"semantic-ui-react\"\r\nimport { Photo, Profile } from \"../../app/models/profile\"\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport PhotoUploadWidget from \"../../app/common/imageUpload/PhotoUploadWidget\";\r\n\r\ninterface Props {\r\n  profile: Profile\r\n}\r\n\r\nconst ProfilePhotos: React.FC<Props> = ({profile}) => {\r\n  const {profileStore: {isCurrentUser, uploadPhoto, uploading, loading, setMainPhoto, deletePhoto}}= useStore();\r\n  const [addPhotoMode, setAddPhotoMode] = useState(false)\r\n  const [target, setTarget] = useState('')\r\n  function handlePhotoUpload(file: Blob) {\r\n    uploadPhoto(file).then(() =>setAddPhotoMode(false))\r\n  }\r\n\r\n  function handleSetMainPhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\r\n    setTarget(e.currentTarget.name);\r\n    setMainPhoto(photo);\r\n  }\r\n\r\n  const handleDeletePhoto = (photo: Photo, e: SyntheticEvent<HTMLButtonElement>) => {\r\n    setTarget(e.currentTarget.name);\r\n    deletePhoto(photo);\r\n  }\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\r\n          {isCurrentUser && (\r\n            <Button floated=\"right\" basic content={addPhotoMode ? 'Cancel' : 'Add Photo'}\r\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n            {addPhotoMode ? (\r\n              <PhotoUploadWidget uploadPhoto={handlePhotoUpload} uploading={uploading} />\r\n            ) : (\r\n              <Card.Group itemsPerRow={5}>\r\n                {profile.photos?.map(photo => (\r\n                  <Card key={photo.id}>\r\n                    <Image src={photo.url} />\r\n                    {isCurrentUser && (\r\n                      <Button.Group fluid width={2}>\r\n                        <Button\r\n                          basic\r\n                          color=\"green\"\r\n                          content=\"Main\"\r\n                          name={photo.id}\r\n                          disabled={photo.isMain}\r\n                          loading={target === photo.id && uploading}\r\n                          onClick={e => handleSetMainPhoto(photo, e)}\r\n                          />\r\n                        <Button\r\n                          basic\r\n                          name={photo.id}\r\n                          color=\"red\"\r\n                          icon=\"trash\"\r\n                          loading={target === photo.id && loading}\r\n                          onClick={e => handleDeletePhoto(photo, e)}\r\n                        />\r\n                      </Button.Group>\r\n                    )}\r\n                  </Card>\r\n                ))}\r\n              </Card.Group>\r\n            )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  )\r\n}\r\n\r\nexport default observer(ProfilePhotos)\r\n\r\n","import { Tab } from 'semantic-ui-react'\r\nimport { Profile } from '../../app/models/profile'\r\nimport { useStore } from '../../app/stores/store'\r\nimport ProfileAbout from './ProfileAbout'\r\nimport ProfileActivities from './ProfileActivities'\r\nimport ProfileFollowings from './ProfileFollowings'\r\nimport ProfilePhotos from './ProfilePhotos'\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nconst ProfileContent: React.FC<Props> = ({profile}) => {\r\n  const {profileStore} = useStore()\r\n  const panes = [\r\n    {menuItem: 'About', render: () => <ProfileAbout />},\r\n    { menuItem: 'Photos', render: () => <ProfilePhotos profile={profile} />},\r\n    {menuItem: 'Events', render: () => <ProfileActivities />},\r\n    { menuItem: 'Followers', render: () => <ProfileFollowings />},\r\n    { menuItem: 'Following', render: () => <ProfileFollowings />},\r\n]\r\n  return (\r\n    <Tab \r\n      menu={{fluid: true, vertical: true}}\r\n      menuPosition='right'\r\n      panes={panes}\r\n      onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\r\n    />\r\n  )\r\n}\r\n\r\nexport default ProfileContent\r\n","import { observer } from \"mobx-react-lite\"\r\nimport { Divider, Grid, Header, Item, Segment, Statistic } from \"semantic-ui-react\"\r\nimport { Profile } from \"../../app/models/profile\"\r\nimport FollowButton from \"./FollowButton\"\r\n\r\ninterface Props {\r\n  profile: Profile\r\n}\r\n\r\nconst ProfileHeader = ({profile}: Props) => {\r\n  return (\r\n    <Segment>\r\n      <Grid>\r\n        <Grid.Column width={12}>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Image avatar small='small' src={profile.image || '/assets/user.png'} />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Header as=\"h1\" content={profile.displayName}/>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Grid.Column>\r\n        <Grid.Column width={4}>\r\n          <Statistic.Group widths={2}>\r\n            <Statistic label=\"Followers\" value={profile.followersCount} />\r\n            <Statistic label=\"Following\" value={profile.followingCount} />\r\n          </Statistic.Group>\r\n          <Divider />\r\n          <FollowButton profile={profile} />\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Segment>\r\n  )\r\n}\r\n\r\nexport default observer(ProfileHeader)\r\n","import { useEffect } from \"react\";\r\nimport { observer } from \"mobx-react-lite\"\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileContent from \"./ProfileContent\";\r\nimport ProfileHeader from \"./ProfileHeader\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\n\r\nconst ProfilePage = () => {\r\n  const {username} = useParams<{username: string}>()\r\n  const {profileStore} = useStore();\r\n  const {loadingProfile, loadProfile, profile, setActiveTab} = profileStore;\r\n\r\n  useEffect(() => {\r\n    loadProfile(username);\r\n    return () => {\r\n      setActiveTab(0);\r\n    }\r\n  }, [loadProfile, username, setActiveTab])\r\n  \r\n  if(loadingProfile) return <LoadingComponent content=\"Loading profile ...\" />\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={16}>\r\n        {profile && <ProfileHeader profile={profile} />}\r\n        {profile && <ProfileContent profile={profile} />}\r\n      </Grid.Column>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default observer(ProfilePage)\r\n","import React from 'react'\r\nimport { Redirect, Route, RouteComponentProps, RouteProps } from 'react-router-dom';\r\nimport { useStore } from '../stores/store';\r\n\r\ninterface Props extends RouteProps {\r\n  component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\r\n}\r\n\r\nconst PrivateRoute = ({component: Component, ...rest}: Props) => {\r\n  const {userStore: {isLoggedIn}} = useStore();\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => isLoggedIn ? <Component {...props} /> : <Redirect to=\"/\" />}\r\n    />\r\n  )\r\n\r\n}\r\n\r\nexport default PrivateRoute\r\n","import './styles.css';\nimport { Container } from 'semantic-ui-react';\nimport Navbar from './Navbar';\nimport ActivityDashboard from '../../features/activities/dashboard/ActivityDashboard';\nimport { observer } from 'mobx-react-lite';\nimport { Route, Switch, useLocation } from 'react-router-dom';\nimport HomePage from '../../features/home/HomePage';\nimport ActivityForm from '../../features/activities/form/ActivityForm';\nimport ActivityDetails from '../../features/activities/details/ActivityDetails';\nimport TestErrors from '../errors/TestError';\nimport {ToastContainer} from 'react-toastify'\nimport NotFound from '../errors/NotFound';\nimport ServerError from '../errors/ServerError';\nimport { useStore } from '../stores/store';\nimport { useEffect } from 'react';\nimport LoadingComponent from './LoadingComponent';\nimport ModalContainer from '../common/modals/ModalContainer';\nimport ProfilePage from '../../features/profiles/ProfilePage';\nimport PrivateRoute from './PrivateRoute';\n\nfunction App() {\n  const location = useLocation();\n  const {commonStore, userStore} = useStore();\n\n  useEffect(() => {\n    if(commonStore.token) {\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\n    } else {\n      commonStore.setAppLoaded();\n    }\n  }, [commonStore, userStore])\n\n\n  if(!commonStore.appLoaded) return <LoadingComponent content=\"Loading app...\" />\n\n  return (\n    <>\n    <ToastContainer position='bottom-right' hideProgressBar />\n    <ModalContainer />\n      <Route exact path='/' component={HomePage} />\n      <Route\n        path={'/(.+)'}\n        render = {() => (\n          <>\n            <Navbar />\n            <Container style={{marginTop: '7em'}}>\n              <Switch>\n                <PrivateRoute exact path='/activities' component={ActivityDashboard} />\n                <PrivateRoute exact path='/activities/:id' component={ActivityDetails} />\n                <PrivateRoute key={location.key!} exact path={['/createActivity', '/manage/:id']} component={ActivityForm} />\n                <PrivateRoute exact path='/profiles/:username' component={ProfilePage} />\n                <PrivateRoute path='/errors' component={TestErrors} />\n                <Route path='/server-error' component={ServerError} />\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </>\n        )}\n      />\n    </>\n  );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nconst ScrollToTop = () => {\r\n  const {pathname} = useLocation();\r\n  \r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n  }, [pathname])\r\n  return null;\r\n}\r\n\r\nexport default ScrollToTop","import ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css'\nimport 'react-calendar/dist/Calendar.css'\nimport 'react-toastify/dist/ReactToastify.min.css'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport './app/layout/styles.css';\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport { store, StoreContext } from './app/stores/store';\nimport { Router } from 'react-router-dom';\nimport {createBrowserHistory} from 'history'\nimport ScrollToTop from './app/layout/ScrollToTop';\n\nexport const history = createBrowserHistory()\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <ScrollToTop />\n    <App />\n    </Router>\n  </StoreContext.Provider>\n,\ndocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}